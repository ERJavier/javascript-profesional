{"version":3,"sources":["ie/typescript/index.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AAEA,SAAS,GAAT,CAAc,CAAd,EAAwB,CAAxB,EAAgC;EAC5B,OAAO,CAAC,GAAG,CAAX;AACH;;AAED,IAAM,GAAG,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;AACA,OAAO,CAAC,GAAR,CAAY,GAAZ;AAEA,IAAI,MAAM,GAAa,EAAvB;AACA,MAAM,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAAT,EACA;;AAEA,IAAI,gBAAgB,GAA6B,EAAjD;AAEA,gBAAgB,CAAC,IAAjB,CAAsB,QAAtB;AACA,gBAAgB,CAAC,IAAjB,CAAsB,CAAtB,GAEA;;AAEA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;EACN,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,KAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACH,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAMA,IAAI,aAAa,GAAU,KAAK,CAAC,QAAjC;AACA,OAAO,CAAC,GAAR,CAAY,iBAAA,MAAA,CAAiB,aAAjB,CAAZ,GAEA;;AAEA,IAAI,OAAO,GAAQ,OAAnB;AACA,OAAO,GAAG;EAAC,IAAI,EAAE;AAAP,CAAV,EAEA;;AAEA,IAAI,UAAU,GAAY;EAAC,IAAI,EAAE;AAAP,CAA1B,EAEA;;AAEA,SAAS,IAAT,CAAe,CAAf,EAAyB,CAAzB,EAAkC;EAC9B,OAAO,CAAC,GAAG,CAAX;AACH;;AACD,IAAM,MAAM,GAAG,IAAI,CAAC,CAAD,EAAG,CAAH,CAAnB;;AAGA,SAAS,WAAT,CAAqB,CAArB,EAA6B;EACzB,OAAO,UAAS,CAAT,EAAiB;IACpB,OAAO,CAAC,GAAG,CAAX;EACH,CAFD;AAGH;;AAED,IAAM,OAAO,GAAG,WAAW,CAAC,CAAD,CAA3B;AACA,IAAM,QAAQ,GAAG,OAAO,CAAC,CAAD,CAAxB;;AAEA,SAAS,QAAT,CAAkB,SAAlB,EAAqC,QAArC,EAA+D;EAA1B,IAAA,QAAA,KAAA,KAAA,CAAA,EAAA;IAAA,QAAA,GAAA,OAAA;EAA0B;;EAC3D,OAAO,GAAA,MAAA,CAAG,SAAH,EAAY,GAAZ,EAAY,MAAZ,CAAgB,QAAhB,CAAP;AACH;;AAED,IAAM,OAAO,GAAG,QAAQ,CAAC,QAAD,CAAxB;AACA,OAAO,CAAC,GAAR,CAAY,OAAZ;AAWA,IAAI,IAAI,GAAe;EACnB,KAAK,EAAE,CADY;EAEnB,IAAI,EAAE,CAFa;EAGnB,KAAK,EAAE;AAHY,CAAvB;;AAOA,SAAS,IAAT,CAAc,CAAd,EAA2B;EACvB,OAAO,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,KAAlB;AACH;;AAED,IAAM,QAAQ,GAAG,IAAjB;AACA,OAAO,CAAC,GAAR,CAAY,QAAZ;AAEA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ;;AAGA,IAAI,CAAC,QAAL,GAAgB,YAAA;EACZ,OAAQ,KAAK,KAAL,GAAa,iBAAA,MAAA,CAAiB,KAAK,KAAtB,CAAb,GAA6C,eAArD;AACH,CAFD;;AAIA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ","file":"typescript.b06d4e00.js","sourceRoot":"..","sourcesContent":["console.log('Hello, TypeScript');\n\nfunction add (a:number, b:number ){\n    return a + b;\n}\n\nconst sum = add(2, 3)\nconsole.log(sum);\n\nlet people: string[] = [];\npeople = [\"yani\", \"redd\", \"julian\"];\n// people.push(\"88\")\n\nlet peopleAndNumbers: Array< string | number > = []\n\npeopleAndNumbers.push(\"manuel\");\npeopleAndNumbers.push(0);\n\n// Enum\n\nenum Color {\n    rojo = \"rojo\",\n    azul = \"azul\",\n    amarillo =\"amarillo\"\n}\n\nlet colorFavorito: Color = Color.amarillo;\nconsole.log(` mi color es  ${colorFavorito}`);\n\n//ANY\n\nlet comodin: any = \"joker\"\ncomodin = {type: 'wildcard'};\n\n//object\n\nlet someObject: object =  {type: 'wildcard'};\n\n// Functions\n\nfunction add2 (a:number, b: number ): number{\n    return a + b;\n}\nconst newSum = add2(5,9);\n\n\nfunction createAdder(a:number): (number) => number {\n    return function(b:number) {\n        return b + a;\n    }\n}\n\nconst addFour = createAdder(4)\nconst fourPlus = addFour(6)\n\nfunction fullName(firstName: string, lastName: string = \"smith\"): string {\n    return `${firstName} ${lastName}`;\n}\n\nconst richard = fullName('agente');\nconsole.log(richard);\n\n// interface\n\ninterface Rectangulo {\n    ancho: number\n    alto: number\n    color?: Color\n\n}\n\nlet rect: Rectangulo = {\n    ancho: 6,\n    alto: 6,\n    color: red\n\n};\n\nfunction area(r: Rectangulo){\n    return r.alto * r.ancho\n}\n\nconst areaRect = area;\nconsole.log(areaRect)\n\nconsole.log(rect.toString());\n\n\nrect.toString = function(){\n    return  this.color ? `un rectangulo ${this.color}` : `Un Rectangulo`;\n} \n\nconsole.log(rect.toString());\n\n"]}