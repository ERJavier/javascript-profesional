{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","button","onclick","playButton","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MCAMoB,GDAGD,MCAT,CAAgB,CDAhB,GAAoB,CAAE;ADCtB,EEAEE,WAAW,GAAG;AFChB,ACAAF,ICAI,IDAI,CCACG,ADAAhB,SCAL,ADAJ,CAAmBQ,ECAE,CDArB,GCAI,ADAsBP,MAAD,IAAY;ADErC,AGAA,EFDI,ECAA,ECCE6B,AFDE,CAAC7B,ECAAgB,ECCE,EFDI,CECDM,AFDEnB,KAAZ,EAAkB,CECA,CAAC2B,IDDnB,GAA0B,KAAKd,CCCrB,CAAuB,OAAvB,CAAd,QDD8B,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFEJ,AGAA,IDDI,ADAIjB,EECFA,GDDGkB,CDAK,CAACf,CECH,GAAG,CFDP,GECWV,AFDG,IAAd,QCAJ,GAA8B,KCCnB,ADDwByB,CCCR,qBDDG,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFGJ,EGDErB,ADAC,ADDE,EECD,EAAEiC,KADyB;AHG/B,EGDEhC,OAAO,EAAE,CAAC,IAAIe,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AHEX,AGJ+B,CAAhB,CAAf,ADGEN,ADFEP,GCEC,CAACA,EDFI,CAACC,GCEN,CDFD,CCEU;AFEd,AGCA,AFJC,CALD,GCOI,ECEE8B,GDFG/B,GCEG,GAAGsB,ADFX,GAActB,KCEK,CAAC8B,ADFpB,aCEW,CAAuB,QAAvB,CAAf;AHAA,IEAI,MAAMX,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,KAAKJ,kBAA9B,EAAkD;AFCvE,AGAAe,MAAM,ADAAhB,CCACiB,OAAP,CDAe,ADHApB,EEGE,ADAA,KAAKG,CCACf,MAAM,CAACQ,UAAP,EAAvB;AHCA,IEFuE,CAAlD,CAAjB;AFGJ,AGAA,IDCIW,ECDEc,MDCM,CAACZ,GCDG,GAAGC,CDCf,CAAiB,KAAKtB,CCDC,CAAC8B,IDCP,CAAYnC,KAA7B,GCDe,CAAuB,aAAvB,CAAnB;AHCA,IEEI2B,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;AFDJ,AGDAe,EDGG,QCHO,CAACD,OAAX,GAAqB,MAAMhC,MAAM,CAACQ,UAAP,EAA3B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","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["//  function MediaPlayer(config) {\n//     this.media = config.el;\n//     this.plugins = config.plugins || [];\n\n//     this._initPlugins();\n//   }\n\n//   MediaPlayer.prototype._initPlugins = () => {\n//     const player = {\n//       play: () =>{ this.play()},\n//       pause: () => {this.pause()},\n//       media: this.media,\n//       get muted() {\n//         return this.media.muted;\n//       },\n//       set muted(value) {\n//         this.media.muted = value;\n//         // if (value === true){\n//         //   this.media.muted = true\n//         // }else{\n//         //   this.media.muted = false\n//         // }\n//       }\n//     };\n//     this.plugins.forEach(plugin => {\n//       plugin.run(this);\n//     });\n//   }\n//   MediaPlayer.prototype.play = function() {\n//     this.media.play();\n//   };\n\n//   MediaPlayer.prototype.pause = function() {\n//     this.media.pause();\n//   };\n\n//   MediaPlayer.prototype.togglePlay = function() {\n//     if (this.media.paused) {\n//       this.play();\n//     } else {\n//       this.pause();\n//     }\n//   };\n\n//   MediaPlayer.prototype.mute = () => {\n//     this.media.muted = true;\n//   }\n//   MediaPlayer.prototype.unmute = () => {\n//     this.media.muted = false;\n//   }\n\n \n//   export default MediaPlayer;\n\nfunction MediaPlayer(config) {\n  this.media = config.el;\n  this.plugins = config.plugins || [];\n\n  this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function() {\n  const player = {\n    play: () => this.play(),\n    pause: () => this.pause(),\n    media: this.media,\n    get muted() {\n      return this.media.muted;\n    },\n    set muted(value) {\n      this.media.muted = value\n    },\n  };\n\n  this.plugins.forEach(plugin => {\n    plugin.run(player);\n  });\n};\n\nMediaPlayer.prototype.play = function() {\n  this.media.play();\n};\n\nMediaPlayer.prototype.pause = function() {\n  this.media.pause();\n};\n\nMediaPlayer.prototype.togglePlay = function() {\n  if (this.media.paused) {\n    this.play();\n  } else {\n    this.pause();\n  }\n};\n\nMediaPlayer.prototype.mute = function() {\n  this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function() {\n  this.media.muted = false;\n};\n\nexport default MediaPlayer;\n","function AutoPlay() {}\n\nAutoPlay.prototype.run = (player) => {\n    if (!player.muted){\n        player.muted =true;\n    }\n    player.play();\n};\n\nexport default AutoPlay;","class AutoPause {\n  constructor() {\n    this.threshold = 0.25;\n    this.handleIntersection = this.handleIntersection.bind(this);\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n\n  }\n\n  run(player) {\n    this.player = player;\n\n    const observer = new IntersectionObserver(this.handleIntersection, {\n      threshold: this.threshold,\n    });\n\n    observer.observe(this.player.media);\n\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\n  }\n\n  handleIntersection(entries) {\n    const entry = entries[0];\n\n    const isVisible = entry.intersectionRatio >= this.threshold;\n\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n  }\n  handleVisibilityChange() {\n      const isVisible = document.visibilityState === \"visible\";\n      if (isVisible) {\n          this.player.play();\n      }else {\n          this.player.pause();\n      }\n  }\n}\n\n\n\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js';\nimport AutoPlay from './plugins/AutoPlay.js';\nimport AutoPause from './plugins/AutoPause.js';\n\nconst video = document.querySelector('video');\nconst player = new MediaPlayer({\n  el: video,\n  plugins: [new AutoPlay(), new AutoPause()],\n});\n\n\nconst button = document.querySelector('button');\nbutton.onclick = () => player.togglePlay();\n\nconst playButton = document.querySelector('#playButton');\nplayButton.onclick = () => player.togglePlay();\n\nconst muteButton = document.querySelector('#muteButton');\nmuteButton.onclick = () => {\n      if (player.media.muted) {\n            player.unmute();\n      } else {\n            player.mute();\n      }\n};\n\nif('serviceWorker' in navigator){\n      navigator.serviceWorker.register('/sw.js').catch(error => {\n            console.log(error.message);\n      })\n}\n"]}